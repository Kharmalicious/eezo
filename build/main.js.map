{"version":3,"file":"main.js","sources":["../src/core/Color.js","../src/core/Point.js","../src/display/DisplayObject.js","../src/display/Label.js","../src/core/Vector.js","../src/core/Light.js","../src/utils/GridPath.js","../src/display/DisplayObjectContainer.js","../src/core/Path.js","../src/display/Shape.js","../src/display/Bitmap.js","../src/utils/FPSCounter.js","../src/display/Stage.js","../src/display/Layer.js","../src/dom-ui/UIBase.js","../src/display/shape/Rect.js","../src/display/shape/Cube.js","../src/display/shape/Circle.js","../src/display/shape/Cylinder.js","../src/display/shape/Diamond.js","../src/display/shape/Pyramid.js","../src/display/shape/Ramp.js","../src/display/shape/Stairs.js","../src/display/shape/Lego.js","../src/display/shape/LegoBrick.js","../src/dom-ui/UIShapeAdd.js","../src/dom-ui/UIPoint.js","../src/dom-ui/UIShapeEdit.js","../src/dom-ui/UIShape.js","../src/display/Sprite.js","../src/samples/Tree.js","../src/utils/TokenAnimation.js","../src/display/Clip.js","../src/display/Token.js","../src/samples/Boy.js","../src/dom-ui/UISpriteAdd.js","../src/dom-ui/UISpriteEdit.js","../src/dom-ui/UISprite.js","../src/dom-ui/UIStage.js","../src/dom-ui/UIContainer.js","../src/main.js","../src/display/shape/Grid.js","../src/display/shape/Axis.js"],"sourcesContent":["export default class Color {\n\n    constructor(red = 0, green = 0, blue = 0, alpha = 255) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n\n        const hsl = Color.rgbToHsl(red, green, blue);\n        this.hue = hsl.h;\n        this.saturation = hsl.s;\n        this.lightness = hsl.l;\n    }\n\n    get hex() {\n        const hex = (this.red * 256 * 256 + this.green * 256 + this.blue).toString(16);\n        return hex.length === 6 ? hex :\n            new Array(6 - hex.length + 1).join('0') + hex;\n    }\n\n    get string() {\n        return this.alpha === 255 ? `#${this.hex}` :\n            `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    get array() {\n        return [this.red, this.green, this.blue];\n    }\n\n    get object() {\n        return { red: this.red, green: this.green, blue: this.blue };\n    }\n\n    get percentage() {\n        return Color.mult(this, 1 / 255);\n    }\n\n    get rgb() {\n        return {\n            r: this.red,\n            g: this.green,\n            b: this.blue\n        }\n    }\n\n    lighten(percentage, lightColor) {\n        const _lightColor = lightColor ? Color.get(lightColor) : Color.get(255, 255, 255);\n        const newColor = Color.get(Color.mult(this, _lightColor.percentage));\n        newColor.lightness = Math.min(newColor.lightness + percentage, 1);\n\n        return Color.get(\n            Color.hslToRgb(newColor.hue, newColor.saturation, newColor.lightness),\n            this.a\n        );\n    };\n\n    static rgbToHsl(red, green, blue) {\n        const perc = Color.percentage({ red, green, blue });\n        const max = Math.max(perc.red, perc.green, perc.blue);\n        const min = Math.min(perc.red, perc.green, perc.blue);\n        const ret = { h: 0, s: 0, l: (max + min) / 2 };\n\n        if (max !== min) {\n            const diff = max - min;\n            ret.s = ret.l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n            switch (max) {\n                case perc.red: ret.h = (perc.green - perc.blue) / diff + (perc.green < perc.blue ? 6 : 0); break;\n                case perc.green: ret.h = (perc.blue - perc.red) / diff + 2; break;\n                case perc.blue: ret.h = (perc.red - perc.green) / diff + 4; break;\n            }\n            ret.h /= 6;\n        }\n\n        return ret;\n    }\n\n    static hslToRgb(h = 0, s = 0, l = 1) {\n        const perc = { red: l, green: l, blue: l };\n\n        if (s !== 0) {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            perc.red = Color.hue2rgb(p, q, h + 1 / 3);\n            perc.green = Color.hue2rgb(p, q, h);\n            perc.blue = Color.hue2rgb(p, q, h - 1 / 3);\n        }\n\n        return [parseInt(perc.red * 255), parseInt(perc.green * 255), parseInt(perc.blue * 255)];\n    }\n\n    static hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n    }\n\n    static mult(color, num) {\n        if (typeof num === 'number') {\n            return {\n                red: color.red * num,\n                green: color.green * num,\n                blue: color.blue * num\n            }\n        }\n        return {\n            red: color.red * num.red,\n            green: color.green * num.green,\n            blue: color.blue * num.blue\n        }\n    }\n\n    static percentage(color) {\n        return Color.mult(color, 1 / 255);\n    }\n\n    // FACTORY\n\n    static get() {\n        if (typeof arguments[0] !== 'number' && !arguments[0]) {\n            return null;\n        }\n        if (arguments.length > 2) {\n            return Color.fromArray(arguments);\n        } else {\n            const color = arguments[0] || 0x0;\n            const alpha = arguments[1] || 1;\n\n            if (typeof color === 'number') {\n                return Color.fromHex(color, Math.round(alpha * 255));\n            }\n            if (color instanceof Array) {\n                return Color.fromArray(color);\n            }\n            if (color instanceof Object) {\n                return Color.fromObject(color);\n            }\n        }\n        return null;\n    }\n\n    static random() {\n        return new Color(parseInt(Math.random() * 255), parseInt(Math.random() * 255), parseInt(Math.random() * 255));\n    }\n\n    static fromHex(number, alpha) {\n        const hex = `000000${number.toString(16)}`.substr(-6);\n        const res = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n        return res ?\n            new Color(\n                parseInt(res[1], 16),\n                parseInt(res[2], 16),\n                parseInt(res[3], 16),\n                alpha\n            ) : null;\n    }\n\n    static fromArray(array) {\n        return new Color(\n            array[0] || 0,\n            array[1] || 0,\n            array[2] || 0,\n            array[3] || 255\n        );\n    }\n\n    static fromObject(object) {\n        return new Color(\n            object.red || 0,\n            object.green || 0,\n            object.blue || 0,\n            object.alpha || 255\n        );\n    }\n\n};\n","export default class Point {\n\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = parseFloat(x);\n        this.y = parseFloat(y);\n        this.z = parseFloat(z);\n    }\n\n    toOrtho() {\n        return Point.get(\n            this.x - this.y,\n            (this.x + this.y) / 2 - this.z * 1.25\n        );\n    }\n\n    toIso() {\n        return Point.get(\n            this.y + (this.x / 2),\n            this.y - (this.x / 2)\n        );\n    }\n\n    get depth() {\n        return - (this.x + this.y + this.z * 2);\n    }\n\n    get average() {\n        return (this.x + this.y + this.z) / 3;\n    }\n\n    get array() {\n        return [this.x, this.y, this.z];\n    }\n\n    get object() {\n        return { x: this.x, y: this.y, z: this.z };\n    }\n\n    get round() {\n        return Point.get(\n            Math.round(this.x * 100) / 100,\n            Math.round(this.y * 100) / 100,\n            Math.round(this.z * 100) / 100\n        )\n    }\n\n    get abs() {\n        return Point.get(\n            Math.abs(this.x),\n            Math.abs(this.y),\n            Math.abs(this.z)\n        )\n    }\n\n    replace({ x, y, z }) {\n        return Point.get(\n            x !== undefined ? x : this.x,\n            y !== undefined ? y : this.y,\n            z !== undefined ? z : this.z\n        );\n    }\n\n    sum(x = 0, y = 0, z = 0) {\n        const { x: _x, y: _y, z: _z } = Point.get(x, y, z);\n        return Point.get(\n            this.x + _x,\n            this.y + _y,\n            this.z + _z\n        );\n    }\n\n    mult(x = 1, y = x, z = x) {\n        const { x: _x, y: _y, z: _z } = Point.get(x, y, z);\n        return Point.get(\n            this.x * _x,\n            this.y * _y,\n            this.z * _z\n        );\n    }\n\n    sub(x = 0, y = 0, z = 0) {\n        const { x: _x, y: _y, z: _z } = Point.get(x, y, z);\n        return this.sum(Point.get(_x, _y, _z).mult(-1));\n    }\n\n    distance(x, y, z) {\n        const diff = this.sub(Point.get(x, y, z));\n        return Math.sqrt(diff.x * diff.x + diff.y * diff.y + diff.z * diff.z);\n    }\n\n    equals(point) {\n        return (\n            this.x === point.x &&\n            this.y === point.y &&\n            this.z === point.z\n        );\n    }\n\n    // ROTATION\n\n    rotateX(angle, center = [0, 0]) {\n        return this._rotate(angle, Point.get(center), 'x');\n    }\n\n    rotateY(angle, center = [0, 0]) {\n        return this._rotate(angle, Point.get(center), 'y');\n    }\n\n    rotateZ(angle, center = [0, 0]) {\n        return this._rotate(angle, Point.get(center), 'z');\n    }\n\n    _rotate(angle, center, axis) {\n        const { x, y, z } = this._getRotationCoords(axis);\n\n        const x1 = this[x] - center[x];\n        const y1 = this[y] - center[y];\n        const radians = angle * (Math.PI / 180);\n        const x2 = x1 * Math.cos(radians) - y1 * Math.sin(radians);\n        const y2 = x1 * Math.sin(radians) + y1 * Math.cos(radians);\n\n        return Point.get({\n            [x]: x2 + center[x],\n            [y]: y2 + center[y],\n            [z]: this[z]\n        });\n    }\n\n    _getRotationCoords(axis) {\n        const xyz = 'xyz';\n        const zi = xyz.indexOf(axis);\n        const ordered = xyz.substr(zi) + xyz.substr(0, zi);\n        return {\n            x: ordered.substr(1, 1),\n            y: ordered.substr(2, 1),\n            z: axis\n        }\n    }\n\n    // FACTORY\n\n    static get(point) {\n        if (typeof point === 'number') {\n            return new Point(...arguments);\n        }\n        if (point instanceof Array) {\n            return new Point(...point);\n        }\n        if (point instanceof Object) {\n            return new Point(point.x || 0, point.y || 0, point.z || 0);\n        }\n    }\n\n}\n","import Point from '../core/Point';\n\nexport default class DisplayObject {\n\n    constructor(props = {}) {\n        this.props = {\n            scale: [1, 1, 1],\n            size: [0, 0, 0],\n            position: [0, 0, 0],\n            rotation: [0, 0, 0],\n            alpha: 1,\n            ...props\n        };\n        this.props.scale = Point.get(this.props.scale);\n        this.props.size = Point.get(this.props.size);\n        this.props.position = Point.get(this.props.position);\n        this.props.rotation = Point.get(this.props.rotation);\n\n        // this._render = { ...this.props };\n\n        this._parent = null;\n        // this._layer = null;\n    }\n\n    set parent(parent) {\n        this._parent = parent;\n        // this._layer = parent._layer;\n        // this._render.position = this.props.position.sum(parent._render.position);\n        // this._render.rotation = this.props.rotation.sum(parent._render.rotation);\n        // this._render.scale = this.props.scale.mult(parent._render.scale);\n        this.onAdd();\n        this.update();\n    }\n\n    get parent() {\n        return this._parent;\n    }\n\n    get layer() {\n        return this.parent.layer;\n    }\n\n    get depth() {\n        return this.renderPosition.depth;\n        // return this.renderPosition.sum(this.props.size.replace({ z: 0 })).depth;\n        // return this.renderPosition.sum(this.props.size.mult(.5)).depth;\n    }\n\n    get renderPosition() {\n        return this.parent?.renderPosition.sum(this.props.position) || this.props.position;\n    }\n\n    get renderRotation() {\n        return this.parent?.renderRotation.sum(this.props.rotation) || this.props.rotation;\n    }\n\n    get renderScale() {\n        return this.parent?.renderScale.mult(this.props.scale) || this.props.scale;\n    }\n\n    alpha(alpha) {\n        return this._setProp('alpha', alpha);\n    }\n\n    size() {\n        return this._setPoint('size', ...arguments);\n    }\n\n    position() {\n        return this._setPoint('position', ...arguments);\n    }\n\n    rotation() {\n        return this._setPoint('rotation', ...arguments);\n    }\n\n    scale() {\n        return this._setPoint('size', this.props.size.mult(...arguments));\n    }\n\n    translate() {\n        return this._setPoint('position', this.props.position.sum(...arguments));\n    }\n\n    rotate() {\n        return this._setPoint('rotation', this.props.rotation.sum(...arguments));\n    }\n\n    update() {\n        // console.log('updating', this);\n    }\n\n    step(callback) {\n        this._stepCallback = callback;\n    }\n\n    clone() {\n        return new this.constructor(this.props);\n    }\n\n    onAdd() {\n        // console.log('added to', this.parent);\n    }\n\n    _stepRender(timestamp) {\n        typeof this._stepCallback === 'function' && this._stepCallback(timestamp);\n    }\n\n    _setProp(prop, value) {\n        this.props[prop] = value;\n        this.update();\n        return this;\n    }\n\n    _setPoint(prop, ...point) {\n        const _point = Point.get(...point);\n\n        if (this.props[prop] instanceof Point) {\n            this.props[prop] = this.props[prop].replace(_point);\n            this.update();\n        } else {\n            throw new Error('FAILURE on _setPoint', this);\n        }\n        return this;\n    }\n\n};\n","import Color from '../core/Color';\nimport DisplayObject from './DisplayObject';\n\nexport default class Label extends DisplayObject {\n\n    constructor(props) {\n        super(props);\n        this.props = {\n            text: '',\n            font: '20px Open Sans',\n            align: 'left',\n            baseline: 'top',\n            color: 0x0,\n            ...this.props\n        };\n        this.props.color = Color.get(this.props.color);\n    }\n\n    text(text) {\n        return this._setProp('text', text);\n    }\n\n    font(font) {\n        return this._setProp('font', font);\n    }\n\n    align(align) {\n        return this._setProp('align', align);\n    }\n\n    baseline(baseline) {\n        return this._setProp('baseline', baseline);\n    }\n\n    color(color) {\n        return this._setProp('color', Color.get(color));\n    }\n\n};\n","import Point from './Point';\n\nexport default class Vector {\n\n    constructor(i = 0, j = 0, k = 0) {\n        this.i = parseFloat(i);\n        this.j = parseFloat(j);\n        this.k = parseFloat(k);\n    }\n\n    magnitude() {\n        return Math.sqrt(this.i * this.i + this.j * this.j + this.k * this.k);\n    }\n\n    normalize() {\n        const magnitude = this.magnitude();\n\n        if (magnitude === 0) {\n            return new Vector(0, 0, 0);\n        }\n        return new Vector(this.i / magnitude, this.j / magnitude, this.k / magnitude);\n    }\n\n    static dotProduct(v1, v2) {\n        return v1.i * v2.i + v1.j * v2.j + v1.k * v2.k;\n    }\n\n    static fromTwoPoints(p1, p2) {\n        return new Vector(...Point.get(p1.sum(Point.get(p2).mult(-1))).array);\n    }\n\n    static crossProduct(v1, v2) {\n        return new Vector(\n            v1.j * v2.k - v2.j * v1.k,\n            -1 * (v1.i * v2.k - v2.i * v1.k),\n            v1.i * v2.j - v2.i * v1.j\n        );\n    }\n\n    // FACTORY\n\n    static get(vector) {\n        if (typeof vector === 'number') {\n            return new Vector(...arguments);\n        }\n        if (vector instanceof Array) {\n            return new Vector(...vector);\n        }\n        if (vector instanceof Object) {\n            return new Vector(\n                vector.i || vector.x || 0,\n                vector.j || vector.y || 0,\n                vector.k || vector.z || 0);\n        }\n    }\n\n};\n","import Color from './Color';\nimport Vector from './Vector';\n\nexport default class Light {\n\n    constructor({ color = 0xdedede, position = [2, -1, 3], colorDifference = 0.2 } = {}) {\n        this.color = Color.get(color);\n        this.position = Vector.get(position);\n        this.colorDifference = colorDifference;\n        this.angle = this.position.normalize();\n    }\n\n    computeColor(color, points) {\n        if (points.length < 3) {\n            return color;\n        }\n\n        const v1 = Vector.fromTwoPoints(points[1], points[0]);\n        const v2 = Vector.fromTwoPoints(points[2], points[1]);\n        const normal = Vector.crossProduct(v1, v2).normalize();\n\n        const brightness = Vector.dotProduct(normal, this.angle);\n        return color.lighten(brightness * this.colorDifference, this.color);\n    }\n\n};\n","import Point from \"../core/Point\";\n\nexport default class GridPath {\n\n    constructor(width, height, origin = [0, 0], grid = []) {\n        this._size = { width, height };\n        this._grid = grid;\n        this._origin = Point.get(origin);\n\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                this._grid.push(0);\n            }\n        }\n\n        // console.log('GRID', this._grid);\n    }\n\n    clone() {\n        return new this.constructor(this._size.width, this._size.height, this._origin, this._grid);\n    }\n\n    freeTile(x, y) {\n        const p = this._origin.sum(x, y);\n        this._grid[this._size.width * p.y + p.x] = 0;\n    }\n\n    setTile(x, y) {\n        const p = this._origin.sum(x, y);\n        this._grid[this._size.width * p.y + p.x] = 1;\n    }\n\n    getTile(x, y) {\n        const p = this._origin.sum(x, y);\n        return this._grid[this._size.width * p.y + p.x];\n    }\n\n    isFree(x, y) {\n        const p = this._origin.sum(x, y);\n        return this._grid[this._size.width * p.y + p.x] === 0;\n    }\n\n};\n","import DisplayObject from './DisplayObject';\n\nexport default class DisplayObjectContainer extends DisplayObject {\n\n    constructor(props) {\n        super(props);\n        this._children = [];\n    }\n\n    get orderedChildren() {\n        return this._children.sort((c1, c2) => c2.depth - c1.depth);\n    }\n\n    add(child) {\n        if (child instanceof Array) {\n            child.forEach(c => this.add(c));\n        } else {\n            this._addChild(child);\n        }\n        return this;\n    }\n\n    remove(child) {\n        if (child instanceof Array) {\n            child.forEach(c => this.remove(c));\n        } else {\n            _removeChild(child);\n        }\n        return this;\n    }\n\n    _addChild(child) {\n        if (child instanceof DisplayObject) {\n            const index = this._children.indexOf(child);\n            if (~index) {\n                this._children.splice(index, 1);\n            }\n            this._children.push(child);\n            child.parent = this;\n        } else {\n            console.log('cant add', child);\n        }\n    }\n\n    _removeChild(child) {\n        const idx = this._children.indexOf(child);\n        if (idx > -1) {\n            this._children.splice(idx, 1);\n            child.parent = null;\n        } else {\n            console.log('cant remove', child);\n        }\n    }\n};\n","import Color from './Color';\nimport Point from './Point';\n\nexport default class Path {\n\n    constructor(points = [], color = 0x0, stroke = 0x0) {\n        this.points = points;\n        this.color = Color.get(color);\n        this.stroke = Color.get(stroke);\n    }\n\n    get depth() {\n        let total = 0;\n        for (let point of this.points) {\n            total += point.depth;\n        }\n        return total / (this.points.length || 1);\n    }\n\n    add(point) {\n        if (point instanceof Array) {\n            this.points = this.points.concat(point);\n        } else {\n            this.points.push(point);\n        }\n        return this;\n    }\n\n    reverse() {\n        const points = this.points.slice().reverse();\n        return new Path(points, this.color, this.stroke);\n    }\n\n    scale(x = 1, y = x, z = x) {\n        const points = this.points.map(point => Point.get(x, y, z).mult(point));\n        return new Path(points, this.color, this.stroke);\n    }\n\n    translate(x = 0, y = 0, z = 0) {\n        const points = this.points.map(point => Point.get(x, y, z).sum(point));\n        return new Path(points, this.color, this.stroke);\n    }\n\n    rotate(rotation, center) {\n        const points = this.points\n            .map(point => point.rotateX(rotation.x, center))\n            .map(point => point.rotateY(rotation.y, center))\n            .map(point => point.rotateZ(rotation.z, center));\n        return new Path(points, this.color, this.stroke);\n    }\n\n    static extrude(path, extrude) {\n        const { points, color, stroke } = path;\n        const paths = [];\n\n        // top\n        const top = path.translate({ z: extrude });\n\n        // sides\n        for (let p1, p2, i = 0; i < points.length; i++) {\n            // p1 = points[i];\n            // p2 = i === points.length - 1 ? points[0] : points[i + 1];\n            paths.push(new Path([\n                // p1, p2,\n                // p2.sum({ z: extrude }),\n                // p1.sum({ z: extrude })\n                points[i],\n                points[(i + 1) % points.length],\n                top.points[(i + 1) % points.length],\n                top.points[i],\n            ], color, stroke));\n        }\n\n        // top\n        // paths.push(path.translate({ z: extrude }));\n        paths.push(top);\n        paths.push(path.reverse());\n\n        return paths;\n    }\n\n    static isPointInPath(path, point) {\n        const { points } = path;\n        for (let c = false, i = -1, l = points.length, j = l - 1; ++i < l; j = i) {\n            ((points[i].y <= point.y && point.y < points[j].y) || (points[j].y <= point.y && point.y < points[i].y))\n                && (point.x < (points[j].x - points[i].x) * (point.y - points[i].y) / (points[j].y - points[i].y) + points[i].x)\n                && (c = !c);\n        }\n        return c;\n    }\n\n\n    // BASIC SHAPES\n\n    static Rect(width = 1, height = 1, color = 0x0, stroke = 0x0) {\n        return new Path([\n            Point.get(0, 0, 0),\n            Point.get(width, 0, 0),\n            Point.get(width, height, 0),\n            Point.get(0, height, 0)\n        ], color, stroke)\n    }\n\n    static Circle(size = 1, segments = 20, color = 0x0, stroke = 0x0) {\n        const radius = size * .5;\n        const center = Point.get(radius, radius);\n        const points = [center.sum(\n            radius * Math.cos(0),\n            radius * Math.sin(0)\n        )];\n\n        for (let i = 1; i <= segments; i += 1) {\n            points.push(center.sum(\n                radius * Math.cos(i * 2 * Math.PI / segments),\n                radius * Math.sin(i * 2 * Math.PI / segments)\n            ));\n        }\n\n        return new Path(points, color, stroke);\n    }\n\n}\n","import Color from '../core/Color';\nimport Path from '../core/Path';\nimport DisplayObject from './DisplayObject';\n\nexport default class Shape extends DisplayObject {\n\n    constructor(props = {}, path = new Path()) {\n        super(props);\n        this.props = {\n            color: null,\n            stroke: null,\n            wireframe: false,\n            extruded: false,\n            ...this.props\n        };\n        this.props.color = Color.get(this.props.color);\n        this.props.stroke = Color.get(this.props.stroke || (this.props.wireframe ? 0x0 : null));\n\n        this.path = path;\n        this.extraPaths = [];\n    }\n\n    get paths() {\n        const p = this.extrudePaths.length ? this.extrudePaths : [this.path];\n        return p.concat(this.extraPaths)\n            .map(path => path\n                .rotate(this.props.rotation, this.props.size.mult(.5))\n                // .translate(this.renderPosition)\n            );\n    }\n\n    get orderedPaths() {\n        return this.paths.sort((p1, p2) => p2.depth - p1.depth);\n    }\n\n    get extrudePaths() {\n        return this.props.extruded ? Path.extrude(this.path, this.props.size.z) : [];\n    }\n\n    add(path) {\n        if (path instanceof Array) {\n            this.extraPaths = this.extraPaths.concat(path);\n        } else {\n            this.extraPaths.push(path);\n        }\n        return this;\n    }\n\n    clearPaths() {\n        this.extraPaths = [];\n    }\n\n    extrude(extrude) {\n        this.props.size.z = extrude;\n        return this._setProp('extruded', true);\n    }\n\n    stroke(stroke) {\n        return this._setProp('stroke', Color.get(stroke));\n    }\n\n    color(color) {\n        return this._setProp('color', Color.get(color));\n    }\n\n};\n","import DisplayObject from './DisplayObject';\nimport Point from '../core/Point';\n\nexport default class Bitmap extends DisplayObject {\n\n    constructor(props = {}) {\n        super(props);\n        this.props = {\n            wireframe: false,\n            imagePath: null,\n            sourceSize: [0, 0],\n            sourcePosition: [0, 0],\n            destinationSize: null,\n            destinationPosition: [0, 0],\n            ...this.props\n        };\n        this.props.sourceSize = Point.get(this.props.sourceSize);\n        this.props.sourcePosition = Point.get(this.props.sourcePosition);\n        this.props.destinationSize = Point.get(this.props.destinationSize || this.props.sourceSize);\n        this.props.destinationPosition = Point.get(this.props.destinationPosition);\n\n        this._loaded = false;\n        this.image = new Image();\n        this.image.onload = event => {\n            if (!this._loaded) {\n                this.updateImageSize(event.target);\n                this.onLoad(event);\n            }\n        };\n        this.props.imagePath && (this.image.src = this.props.imagePath);\n    }\n\n    get source() {\n        return {\n            size: this.props.sourceSize,\n            position: this.props.sourcePosition\n        }\n    }\n\n    get destination() {\n        return {\n            size: this.props.destinationSize,\n            position: this.props.destinationPosition\n        }\n    }\n\n    updateImageSize(img) {\n        this._loaded = true;\n        if (this.props.sourceSize.average === 0) {\n            this.props.sourceSize = Point.get(img.naturalWidth, img.naturalHeight);\n        }\n        if (this.props.destinationSize.average === 0) {\n            this.props.destinationSize = this.props.sourceSize;\n        }\n    }\n\n    onLoad(event) {\n    }\n\n    // sourceSize(size) {\n    //     return this._setPoint('sourceSize', size);\n    // }\n\n    // sourcePosition(position) {\n    //     return this._setPoint('sourcePosition', position);\n    // }\n\n    // destinationSize(size) {\n    //     return this._setPoint('destinationSize', size);\n    // }\n\n    // destinationPosition(position) {\n    //     return this._setPoint('destinationPosition', position);\n    // }\n\n};\n","export default class FPSCounter {\n\n    constructor() {\n        this._times = [];\n        this._showFPS = false;\n        this._callback = null;\n    }\n\n    start(callback) {\n        this._showFPS = true;\n        this._callback = callback;\n        this._step();\n    }\n\n    stop() {\n        this._showFPS = false;\n    }\n\n    _step() {\n        // https://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n        const now = performance.now();\n        while (this._times.length && this._times[0] <= now - 1000) {\n            this._times.shift();\n        }\n        this._times.push(now);\n        typeof this._callback === 'function' && this._callback(this._times.length);\n        this._showFPS && requestAnimationFrame(this._step.bind(this));\n    }\n\n};\n","import DisplayObjectContainer from './DisplayObjectContainer';\nimport Shape from './Shape';\nimport Bitmap from './Bitmap';\nimport Point from '../core/Point';\nimport Label from './Label';\nimport FPSCounter from '../utils/FPSCounter';\nimport Light from '../core/Light';\n\nexport default class Stage extends DisplayObjectContainer {\n    constructor() {\n        super();\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.cssText = 'width: 100%; height: 100%;';\n        this.context = this.canvas.getContext('2d');\n        document.body.appendChild(this.canvas);\n\n        this.size = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n\n        this.imageCache = {};\n\n        this.light = new Light();\n\n        this.canvas.addEventListener('click', this._clickHandler.bind(this));\n        window.addEventListener('resize', this._resizeHandler.bind(this));\n    }\n\n    // GETTERS\n\n    get layers() {\n        return this._children;\n    }\n\n    get size() {\n        return {\n            width: this.canvas.width,\n            height: this.canvas.height\n        }\n    }\n\n    set size({ width, height }) {\n        this.canvas.width = width * 2 || this.canvas.width;\n        this.canvas.height = height * 2 || this.canvas.height;\n    }\n\n    // FPS HANDLER\n\n    showFPS(callback) {\n        this.fpsCounter || (this.fpsCounter = new FPSCounter());\n        this.fpsCounter.start(callback);\n    }\n\n    hideFPS() {\n        this.fpsCounter?.stop();\n    }\n\n    // IMAGE CACHE\n    preloadImage(imagePath) {\n        const img = new Image();\n        img.onload = event => {\n            this.imageCache[imagePath] = event.target;\n        };\n        img.src = imagePath;\n    }\n\n    // ANIMATION\n\n    start() {\n        this._playing = true;\n        this._startTime = 0;\n        requestAnimationFrame(this._step.bind(this))\n    }\n\n    stop() {\n        this._playing = false;\n    }\n\n    _step(timestamp) {\n        if (this._startTime === 0) {\n            this._startTime = timestamp;\n        }\n        this.render(timestamp - this._startTime);\n        this._playing && requestAnimationFrame(this._step.bind(this));\n    }\n\n    // HANDLERS\n\n    _resizeHandler() {\n        this.size = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n        this.render();\n    }\n\n    _clickHandler(event) {\n        const mouse = Point.get(event.clientX, event.clientY).mult(2);\n        for (let layer of this.layers) {\n            const relative = mouse.sub(layer.getOrigin(this.size));\n            const position = layer.screenToLayer(relative);\n            const tile = layer.getTile(position);\n            layer.emit('click', { position, tile });\n        }\n    }\n\n    // RENDER\n\n    render(timestamp) {\n        this.context.clearRect(0, 0, this.size.width, this.size.height);\n        for (let layer of this.layers) {\n            this._renderChildren(layer.orderedChildren, layer, timestamp);\n        }\n    }\n\n    _renderChildren(children, layer, timestamp) {\n        for (let child of children) {\n            if (child instanceof DisplayObjectContainer) {\n                this._renderChildren(child.orderedChildren, layer, timestamp);\n            } else {\n                this._renderChild(child, layer, timestamp);\n            }\n        }\n    }\n\n    _renderChild(child, layer, timestamp) {\n        child._stepRender(timestamp);\n        const origin = layer.getOrigin(this.size);\n\n        if (child instanceof Shape) {\n            for (let path of child.orderedPaths) {\n                this._drawPath(path, origin, child.renderPosition, layer);\n            }\n        } else if (child instanceof Bitmap) {\n            this._drawBitmap(child, origin, child.renderPosition, layer);\n        } else if (child instanceof Label) {\n            this._drawLabel(child, origin, child.renderPosition, layer);\n        }\n\n    }\n\n    // DRAW\n\n    _drawPath(path, origin, offset, layer) {\n        const { points = [], color, stroke } = path;\n\n        if (!points.length) {\n            return null;\n        }\n\n        const zero = layer.layerToScreen(offset.sum(points[0])).sum(origin);\n\n        this.context.beginPath();\n        this.context.moveTo(zero.x, zero.y);\n        for (let point, i = 1, l = points.length; i < l; i++) {\n            point = layer.layerToScreen(offset.sum(points[i])).sum(origin);\n            this.context.lineTo(point.x, point.y);\n        }\n        this.context.closePath();\n\n        const _color = color ? this.light.computeColor(color, points) : null;\n\n        this.context.save();\n        (stroke || _color) && (this.context.strokeStyle = stroke?.string || _color?.string);\n        _color && (this.context.fillStyle = _color?.string);\n        this.context.lineWidth = 0;\n        this.context.globalAlpha = 1;\n        this.context.stroke();\n        this.context.fill();\n        this.context.restore();\n    }\n\n    _drawBitmap(bitmap, origin, offset, layer) {\n        const { image, source, destination, props } = bitmap;\n        const { size, position, wireframe } = props;\n        const _position = layer.layerToScreen(offset.sum([.5, .5])).sum(origin);\n\n        const { x: sw, y: sh } = source.size;\n        const { x: sx, y: sy } = source.position;\n        const { x: dw, y: dh } = destination.size;\n        const { x: dx, y: dy } = destination.position.sum(_position);\n\n        this.context.save();\n        this.context.globalAlpha = 1;\n        this.context.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n        wireframe && this.context.strokeRect(dx, dy, dw, dh);\n        this.context.restore();\n    }\n\n    _drawLabel(label, origin, offset, layer) {\n        const { position, text, font, baseline, color } = label.props;\n        const _position = layer.layerToScreen(offset.sum(position)).sum(origin);\n\n        this.context.save();\n        this.context.transform(2, 0, 0, 2, 0, 0);\n        this.context.font = font;\n        this.context.textBaseline = baseline;\n        this.context.globalAlpha = 1;\n        this.context.fillStyle = color.string;\n        this.context.fillText(text, _position.x, _position.y);\n        this.context.restore();\n    }\n\n};\n","import Light from '../core/Light';\nimport Point from '../core/Point';\nimport GridPath from '../utils/GridPath';\nimport DisplayObjectContainer from './DisplayObjectContainer';\nimport Stage from './Stage';\n\nexport default class Layer extends DisplayObjectContainer {\n\n    static T = 0;\n    static L = 0;\n    static B = 1;\n    static R = 1;\n    static C = .5;\n    static ORIGIN__TOP_LEFT = Point.get(Layer.L, Layer.T);\n    static ORIGIN__TOP_RIGHT = Point.get(Layer.R, Layer.T);\n    static ORIGIN__TOP_CENTER = Point.get(Layer.C, Layer.T);\n    static ORIGIN__BOTTOM_LEFT = Point.get(Layer.L, Layer.B);\n    static ORIGIN__BOTTOM_RIGHT = Point.get(Layer.R, Layer.B);\n    static ORIGIN__BOTTOM_CENTER = Point.get(Layer.C, Layer.B);\n    static ORIGIN__CENTER_LEFT = Point.get(Layer.L, Layer.C);\n    static ORIGIN__CENTER_RIGHT = Point.get(Layer.R, Layer.C);\n    static ORIGIN__CENTER = Point.get(Layer.C, Layer.C);\n\n    static TYPE__2D = '2d';\n    static TYPE__ISO = 'iso';\n\n    constructor(origin = Layer.ORIGIN__CENTER, type = Layer.TYPE__2D, unit = 1) {\n        super();\n\n        this.ORIGIN = origin;\n        this.TYPE = type;\n        this.UNIT = unit;\n\n        // this._layer = this;\n        this._listeners = {};\n        this._nodes = {};\n    }\n\n    get layer() {\n        return this;\n    }\n\n    get stage() {\n        if (this._parent instanceof Stage) {\n            return this._parent;\n        }\n        return null;\n    }\n\n    addGridPath() {\n        this._gridpath = new GridPath(20, 20, [10, 10]);\n    }\n\n    // POINT CONVERSION\n\n    getTile(position) {\n        const tile = Point.get(position);\n        if (tile.x < 0) {\n            tile.x = -Math.ceil(tile.x * -1);\n        } else {\n            tile.x = Math.floor(tile.x);\n        }\n        if (tile.y < 0) {\n            tile.y = -Math.ceil(tile.y * -1);\n        } else {\n            tile.y = Math.floor(tile.y);\n        }\n        return tile;\n    }\n\n    getOrigin({ width, height }) {\n        return Point.get(width, height).mult(this.ORIGIN);\n    }\n\n    screenToLayer(point) {\n        const _point = point.mult(1 / this.UNIT);\n        if (this.TYPE === Layer.TYPE__ISO) {\n            return _point.toIso();\n        }\n        return _point;\n    }\n\n    layerToScreen(point) {\n        const _point = point.mult(this.UNIT);\n        if (this.TYPE === Layer.TYPE__ISO) {\n            return _point.toOrtho();\n        }\n        return _point;\n    }\n\n    // EVENTS\n\n    subscribe(type, callback) {\n        if (typeof callback !== 'function') {\n            throw new Error('event callback is not a function');\n        }\n        if (!this._listeners[type]) {\n            this._listeners[type] = [];\n        }\n        this._listeners[type].push(callback);\n    }\n\n    emit(type, data) {\n        if (!this._listeners[type]) {\n            return null;\n        }\n        for (let listener of this._listeners[type]) {\n            listener(type, data);\n        }\n    }\n\n    // PROPS\n\n    origin(origin) {\n        this.ORIGIN = origin;\n        return this;\n    }\n\n    type(type) {\n        this.TYPE = type;\n        return this;\n    }\n\n};\n","export default class UIBase {\n\n    constructor(tag = 'div') {\n        this.element = document.createElement(tag);\n        this.element.style.cssText = 'box-sizing: border-box; padding: 4px;';\n    }\n\n    onChange() { }\n\n    createSelect(options = []) {\n        const select = document.createElement('select');\n\n        for (let i in options) {\n            const opt = document.createElement('option');\n            opt.text = options[i];\n            opt.value = i;\n            select.appendChild(opt);\n        }\n\n        return select;\n    }\n\n    updateSelect(select, options = [], selectedIndex = null) {\n        const selected = select.value;\n        while (select.firstChild) {\n            select.removeChild(select.lastChild);\n        }\n        for (let i in options) {\n            const opt = document.createElement('option');\n            const isSelected = selectedIndex === null ?\n                ~~i === options.length - 1 :\n                ~~i === selectedIndex;\n\n            opt.text = options[i];\n            opt.value = i;\n            opt.selected = isSelected;\n            select.appendChild(opt);\n        }\n    }\n\n    createButton(text = 'button') {\n        const button = document.createElement('button');\n        button.textContent = text\n        return button;\n    }\n\n    createTextField(type = 'text') {\n        const textfield = document.createElement('input');\n        textfield.setAttribute('type', type);\n        return textfield;\n    }\n\n    createRange(min = 0, max = 0, step = 1) {\n        const range = document.createElement('input');\n        range.setAttribute('type', 'range');\n        range.setAttribute('min', min);\n        range.setAttribute('max', max);\n        range.setAttribute('step', step);\n        return range;\n    }\n\n    updateRange(range, { min, max, step, value } = {}) {\n        typeof min === 'number' && range.setAttribute('min', min);\n        typeof max === 'number' && range.setAttribute('max', max);\n        typeof step === 'number' && range.setAttribute('step', step);\n        typeof value === 'number' && (range.value = value);\n    }\n\n    createStepper(step = 1, min = null, max = null) {\n        const textfield = document.createElement('input');\n        textfield.setAttribute('type', 'number');\n        textfield.setAttribute('step', step);\n        textfield.style.cssText = 'width: 60px';\n        typeof min === 'number' && textfield.setAttribute('min', min);\n        typeof max === 'number' && textfield.setAttribute('max', max);\n        return textfield;\n    }\n\n};\n","import Path from '../../core/Path';\nimport Shape from '../Shape';\n\nexport default class Rect extends Shape {\n\n    constructor(props = {}, width = 1, height = 1) {\n        super({\n            size: [width, height, 0],\n            ...props\n        });\n        this.name = 'rect';\n    }\n\n    update() {\n        this.path = Path.Rect(this.props.size.x, this.props.size.y, this.props.color, this.props.stroke);\n    }\n\n};\n","import Rect from './Rect';\n\nexport default class Cube extends Rect {\n\n    constructor(props = {}) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.props.extruded = true;\n        this.name = 'cube';\n    }\n\n    height(height) {\n        this.props.size.z = height;\n        this.update();\n        return this;\n    }\n\n};\n","import Path from '../../core/Path';\nimport Point from '../../core/Point';\nimport Shape from '../Shape';\n\nexport default class Circle extends Shape {\n\n    constructor(props = {}, radius = 1, segments = 20) {\n        super(props);\n        this.props = {\n            size: [radius, radius],\n            segments,\n            ...this.props\n        }\n        this.name = 'circle';\n    }\n\n    size() {\n        const p = Point.get(...arguments);\n        return this._setPoint('size', p.replace({ x: p.x, y: p.x }));\n    }\n\n    radius(radius) {\n        this.size(radius, radius);\n    }\n\n    segments(segments) {\n        return this._setProp('segments', segments);\n    }\n\n    update() {\n        this.path = Path.Circle(this.props.size.x, this.props.segments, this.props.color, this.props.stroke);\n    }\n\n};\n","import Circle from './Circle';\n\nexport default class Cylinder extends Circle {\n\n    constructor(props = {}, radius = 1, extrude = 1, segments = 20) {\n        super({\n            size: [radius, radius, extrude],\n            ...props\n        }, radius, segments);\n        this.props.extruded = true;\n        this.name = 'cylinder';\n    }\n\n    height(height) {\n        this.props.size.z = height;\n        this.update();\n        return this;\n    }\n\n};\n","import Path from '../../core/Path';\nimport Point from '../../core/Point';\nimport Shape from '../Shape';\n\nexport default class Diamond extends Shape {\n\n    constructor(props = {}, width = 1, height = 1, extrude = 1) {\n        super({\n            size: [width, height, extrude],\n            ...props\n        });\n        this.name = 'diamond';\n    }\n\n    height(height) {\n        this.props.size.z = height;\n        this.update();\n        return this;\n    }\n\n    update() {\n        const { points } = Path.Rect(this.props.size.x, this.props.size.y).translate({ z: this.props.size.z / 2 });\n        const { size, color, stroke } = this.props;\n\n        const vertexTop = Point.get(size.x / 2, size.y / 2, this.props.size.z);\n        const vertexBottom = Point.get(size.x / 2, size.y / 2, 0);\n\n        this.clearPaths();\n        for (let p1, p2, i = 0; i < points.length; i++) {\n            p1 = points[i];\n            p2 = i === points.length - 1 ? points[0] : points[i + 1];\n            this.add(new Path([\n                p1, p2,\n                vertexTop\n            ], color, stroke));\n            this.add(new Path([\n                p1, p2,\n                vertexBottom\n            ], color, stroke).reverse());\n        }\n    }\n\n};\n","import Shape from '../Shape';\nimport Path from '../../core/Path';\nimport Point from '../../core/Point';\nimport Rect from './Rect';\n\nexport default class Pyramid extends Shape {\n\n    constructor(props = {}) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.name = 'pyramid';\n    }\n\n    height(height) {\n        this.props.size.z = height;\n        this.update();\n        return this;\n    }\n\n    update() {\n        const { size, color, stroke } = this.props;\n\n        const path = Path.Rect(size.x, size.y, color, stroke);\n        const { points } = path;\n\n        const vertex = Point.get(size.x / 2, size.y / 2, size.z);\n\n        this.clearPaths();\n        this.add(path.reverse());\n        for (let p1, p2, i = 0; i < points.length; i++) {\n            p1 = points[i];\n            p2 = i === points.length - 1 ? points[0] : points[i + 1];\n            this.add(new Path([\n                p1, p2,\n                vertex\n            ], color, stroke));\n        }\n    }\n\n};\n","import Path from '../../core/Path';\nimport Point from '../../core/Point';\nimport Shape from '../Shape';\n\nexport default class Ramp extends Shape {\n\n    static FACE__NN = 180;\n    static FACE__EE = -90;\n    static FACE__SS = 0;\n    static FACE__WW = 90;\n\n    constructor(props) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.props = {\n            direction: Ramp.FACE__SS,\n            ...this.props\n        };\n        this.props.rotation = this.props.rotation.sum(0, 0, this.props.direction);\n        this.name = 'ramp';\n    }\n\n    update() {\n        this.clearPaths();\n        const { size, color, stroke } = this.props;\n\n        // base\n        this.add(Path.Rect(size.x, size.y, color, stroke));\n        // back\n        this.add(new Path([\n            Point.get(0, 0, 0),\n            Point.get(size.x, 0, 0),\n            Point.get(size.x, 0, size.z),\n            Point.get(0, 0, size.z)\n        ], color, stroke));\n        // left side\n        this.add(new Path([\n            Point.get(0, 0, 0),\n            Point.get(0, size.y, 0),\n            Point.get(0, 0, size.z)\n        ], color, stroke).reverse());\n        // right side\n        this.add(new Path([\n            Point.get(size.x, 0, 0),\n            Point.get(size.x, size.y, 0),\n            Point.get(size.x, 0, size.z)\n        ], color, stroke));\n        // ramp\n        this.add(new Path([\n            Point.get(0, size.y, 0),\n            Point.get(size.x, size.y, 0),\n            Point.get(size.x, 0, size.z),\n            Point.get(0, 0, size.z)\n        ], color, stroke).reverse());\n    }\n\n};\n","import Shape from '../Shape';\nimport Path from '../../core/Path';\nimport Point from '../../core/Point';\n\nexport default class Stairs extends Shape {\n\n    static FACE__NN = { size: Point.get(0, 1), pos: Point.get(0, 1, 1) };\n    static FACE__EE = { size: Point.get(1, 0), pos: Point.get(0, 0, 1) };\n    static FACE__SS = { size: Point.get(0, 1), pos: Point.get(0, 0, 1) };\n    static FACE__WW = { size: Point.get(1, 0), pos: Point.get(1, 0, 1) };\n\n    static FACE__NW = { size: Point.get(1, 1), pos: Point.get(1, 1, 1) };\n    static FACE__SW = { size: Point.get(1, 1), pos: Point.get(1, 0, 1) };\n    static FACE__NE = { size: Point.get(1, 1), pos: Point.get(0, 1, 1) };\n    static FACE__SE = { size: Point.get(1, 1), pos: Point.get(0, 0, 1) };\n\n    constructor(props) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.props = {\n            steps: 10,\n            direction: Stairs.FACE__EE,\n            ...this.props\n        };\n        this.name = 'stairs';\n        // this.step(() => this.rotate({ z: 1 }))\n    }\n\n    update() {\n        this.clearPaths();\n\n        const { size, position, direction, steps, color, stroke } = this.props;\n        const step = size.mult(1 / steps);\n\n        this.add(Path.Rect(size.x, size.y, color, stroke));\n\n        for (let s = 0; s < steps; s++) {\n            const siz = size.sub(direction.size.mult(step.mult(s))).round;\n            const pos = direction.pos.mult(step.mult(s)).round;\n\n            const rect = Path\n                .Rect(siz.x, siz.y, color, stroke)\n                .translate(pos);\n\n            this.add([rect, ...Path.extrude(rect, step.z)]);\n        }\n    }\n\n};\n","import Path from '../../core/Path';\nimport Rect from './Rect';\n\nexport default class Lego extends Rect {\n\n    constructor(props = {}) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.props.extruded = true;\n        this.name = 'lego';\n    }\n\n    height(height) {\n        this.props.size.z = height;\n        this.update();\n        return this;\n    }\n\n    update() {\n        this.clearPaths();\n        super.update();\n\n        const radius = .6;\n        const circle = Path.Circle(radius, 20, this.props.color, this.props.stroke);\n\n        for (let w = 0, width = Math.floor(this.props.size.x); w < width; w++) {\n            for (let h = 0, height = Math.floor(this.props.size.y); h < height; h++) {\n                this.add(Path.extrude(circle.translate(\n                    (1 - radius) / 2 + w,\n                    (1 - radius) / 2 + h,\n                    this.props.size.z\n                ), 0.2));\n            }\n        }\n    }\n\n};\n","import DisplayObjectContainer from \"../DisplayObjectContainer\";\nimport Lego from \"./Lego\";\n\nexport default class LegoBrick extends DisplayObjectContainer {\n\n    constructor(props) {\n        super({\n            size: [1, 1, 1],\n            ...props\n        });\n        this.name = 'legobrick';\n    }\n\n    // rotation(rotation) {\n    // }\n\n    update() {\n        super.update();\n        this._children = [];\n        for (let w = 0, width = Math.floor(this.props.size.x); w < width; w++) {\n            for (let h = 0, height = Math.floor(this.props.size.y); h < height; h++) {\n                this.add(new Lego({ position: [w, h], color: 0xcc0000 }));\n            }\n        }\n    }\n\n};\n","import UIBase from \"./UIBase\";\nimport Cube from \"../display/shape/Cube\";\nimport Cylinder from \"../display/shape/Cylinder\";\nimport Diamond from \"../display/shape/Diamond\";\nimport Pyramid from \"../display/shape/Pyramid\";\nimport Ramp from \"../display/shape/Ramp\";\nimport Stairs from \"../display/shape/Stairs\";\nimport Lego from \"../display/shape/Lego\";\nimport LegoBrick from \"../display/shape/LegoBrick\";\n\nexport default class UIShapeAdd extends UIBase {\n\n    constructor() {\n        super();\n\n        const shapes = [\n            ['Cube', Cube],\n            ['Cylinder', Cylinder],\n            ['Pyramid', Pyramid],\n            ['Diamond', Diamond],\n            ['Ramp', Ramp],\n            ['Stairs', Stairs],\n            ['Lego', Lego],\n            ['LegoBrick', LegoBrick],\n        ];\n\n        // SELECT\n        const select_shape = this.createSelect(shapes.map(o => o[0]));\n        this.element.appendChild(select_shape);\n\n        // BUTTON\n        const button_add = this.createButton('Add shape');\n        button_add.addEventListener('click', (e) => {\n            const cls = shapes[select_shape.value][1];\n            this.onAdd(e, {\n                instance: new cls({ color: 0xcccccc })\n            });\n        });\n        this.element.appendChild(button_add);\n    }\n\n    onAdd(event) { }\n\n};\n","import UIBase from \"./UIBase\";\n\nexport default class UIPoint extends UIBase {\n\n    constructor(prop, step = 0.1, min = null, max = null) {\n        super();\n        this.prop = prop;\n\n        const label = document.createElement('span');\n        label.textContent = prop;\n\n        this.point_x = this.createStepper(step, min, max);\n        this.point_x.addEventListener('change', () => this.onChange());\n        this.point_y = this.createStepper(step, min, max);\n        this.point_y.addEventListener('change', () => this.onChange());\n        this.point_z = this.createStepper(step, min, max);\n        this.point_z.addEventListener('change', () => this.onChange());\n\n        // const button = this.createButton('set');\n        // button.addEventListener('click', () => this.onClick());\n\n        this.element.appendChild(label);\n        this.element.appendChild(this.point_x);\n        this.element.appendChild(this.point_y);\n        this.element.appendChild(this.point_z);\n        // this.element.appendChild(button);\n    }\n\n    get value() {\n        return [\n            Number(this.point_x.value),\n            Number(this.point_y.value),\n            Number(this.point_z.value)\n        ]\n    }\n\n    update(x, y, z) {\n        this.point_x.value = x;\n        this.point_y.value = y;\n        this.point_z.value = z;\n    }\n\n}","import Color from \"../core/Color\";\nimport UIBase from \"./UIBase\";\nimport UIPoint from \"./UIPoint\";\n\nexport default class UIShapeEdit extends UIBase {\n\n    constructor(shapes) {\n        super();\n\n        this.shapes = shapes;\n\n        this.currentShape = null;\n        this.selectCurrentShape = this.createSelect([]);\n        this.selectCurrentShape.addEventListener('change', () => {\n            this.updateCurrentShape();\n        });\n\n        this.color = new UIColor();\n        this.color.onChange = this.updateColor.bind(this);\n        this.size = new UIPoint('size', 0.1, 0.1);\n        this.size.onChange = this.updateSize.bind(this);\n        this.position = new UIPoint('position', 0.1);\n        this.position.onChange = this.updatePosition.bind(this);\n        this.rotation = new UIPoint('rotation', 10, 0, 360);\n        this.rotation.onChange = this.updateRotation.bind(this);\n\n        this.element.appendChild(this.selectCurrentShape);\n        this.element.appendChild(this.color.element);\n        this.element.appendChild(this.size.element);\n        this.element.appendChild(this.position.element);\n        this.element.appendChild(this.rotation.element);\n    }\n\n    onEdit() { }\n\n    // SHAPE LIST\n    updateShapeList(options) {\n        this.updateSelect(this.selectCurrentShape, options);\n        this.currentShape || (this.currentShape = this.shapes[0]);\n        this.updateCurrentShape();\n    }\n\n    // CURRENT SHAPE\n    updateCurrentShape() {\n        this.currentShape = this.shapes[this.selectCurrentShape.value];\n        this.updateKnobs();\n    }\n\n    // KNOBS\n    updateKnobs() {\n        this.updateColorKnobs();\n        this.updateSizeKnobs();\n        this.updatePositionKnobs();\n        this.updateRotationKnobs();\n    }\n\n    //  COLOR\n    updateColor() {\n        this.currentShape?.color(this.color.value);\n        this.onEdit();\n    }\n    updateColorKnobs() {\n        const { color } = this.currentShape?.props || {};\n        this.color.update(color);\n    }\n\n    // SIZE\n    updateSize() {\n        this.currentShape?.size(this.size.value);\n        this.updateSizeKnobs();\n        this.onEdit();\n    }\n    updateSizeKnobs() {\n        const { x, y, z } = this.currentShape?.props.size || {};\n        this.size.update(x, y, z);\n    }\n\n    //  POSITION\n    updatePosition() {\n        this.currentShape?.position(this.position.value);\n        this.onEdit();\n    }\n    updatePositionKnobs() {\n        const { x, y, z } = this.currentShape?.props.position || {};\n        this.position.update(x, y, z);\n    }\n\n    //  ROTATION\n    updateRotation() {\n        this.currentShape?.rotation(this.rotation.value);\n        this.onEdit();\n    }\n    updateRotationKnobs() {\n        const { x, y, z } = this.currentShape?.props.rotation || {};\n        this.rotation.update(x, y, z);\n    }\n\n};\n\nclass UIColor extends UIBase {\n\n    constructor() {\n        super();\n\n        const label = document.createElement('span');\n        label.textContent = 'color';\n\n        this.color = this.createTextField('text');\n        this.color.style.cssText = 'width: 80px';\n        this.color.addEventListener('change', () => this.onChange?.());\n\n        const button = this.createButton('random');\n        button.addEventListener('click', () => {\n            this.color.value = Color.random().string;\n            this.onChange();\n        });\n\n        this.element.appendChild(label);\n        this.element.appendChild(this.color);\n        this.element.appendChild(button);\n    }\n\n    get value() {\n        return parseInt(Number('0x' + this.color.value.substr(1)));\n    }\n\n    update(color) {\n        this.color.value = color.string;\n    }\n\n}\n","import UIBase from \"./UIBase\";\nimport UIShapeAdd from \"./UIShapeAdd\";\nimport UIShapeEdit from \"./UIShapeEdit\";\n\nexport default class UIShape extends UIBase {\n\n    constructor(layer) {\n        super();\n        this.element.style.cssText = 'flex: 1 1 50%';\n\n        this.shapes = [];\n        this.layer = layer;\n\n        const shapeEdit = new UIShapeEdit(this.shapes);\n        shapeEdit.onEdit = () => this.layer.stage.render();\n\n        const shapeAdd = new UIShapeAdd();\n        shapeAdd.onAdd = (e, { instance }) => {\n            instance.name = `${instance.name || 'shape'}_${this.shapes.length.toString()}`;\n            this.shapes.push(instance);\n            this.layer.add(instance);\n            this.layer.stage.render();\n            shapeEdit.updateShapeList(this.shapes.map(s => s.name));\n        }\n\n        this.element.appendChild(shapeAdd.element);\n        this.element.appendChild(shapeEdit.element);\n    }\n\n};\n","import Point from '../core/Point';\nimport Bitmap from './Bitmap';\n\nexport default class Sprite extends Bitmap {\n\n    constructor(props) {\n        super({\n            size: [1, 1],\n            ...props\n        });\n        this.props = {\n            physical: false,\n            ...this.props\n        };\n        this._frames = [];\n        this._current = -1;\n        this.UNIT = 1\n    }\n\n    onAdd() {\n        if (this.layer) {\n            const scale = this.layer.UNIT / this.UNIT;\n            this.props.scale = Point.get(scale, scale);\n\n            const preloaded = this.layer.stage.imageCache[this.props.imagePath];\n            if (preloaded) {\n                this.image = preloaded;\n                this.updateImageSize(preloaded);\n                this.reposition();\n            }\n        }\n        this._frames.length && this.renderFrame(0);\n    }\n\n    onLoad() {\n        this.reposition();\n    }\n\n    reposition() {\n        if (this._loaded) {\n            // repositions bitmap vertically aligned with position\n            this.props.destinationPosition = this.props.destinationPosition\n                .sum([-this.destination.size.x / 2, -this.destination.size.y]);\n        }\n    }\n\n    addFrames(frames) {\n        frames.forEach(frame => {\n            this.addFrame(frame.position, frame.size, frame.offset);\n        });\n    }\n\n    addFrame(position, size, offset) {\n        this._frames.push({ size, position, offset });\n    }\n\n    renderFrame(frame) {\n        this._current = frame;\n        const { size, position, offset } = this._frames[frame];\n\n        const sizeChanged = size && size !== this.props.sourceSize;\n        const positionChanged = position && position !== this.props.sourcePosition;\n        const offsetChanged = offset && offset !== this.props.destinationPosition;\n\n        sizeChanged && (this.props.sourceSize = Point.get(size));\n        sizeChanged && (this.props.destinationSize = Point.get(size).mult(this.props.scale));\n        positionChanged && (this.props.sourcePosition = Point.get(position));\n        offsetChanged && (this.props.destinationPosition = Point.get(offset).mult(this.props.scale));\n        (offsetChanged || sizeChanged) && this.reposition();\n    }\n\n    position() {\n        const oldPos = Point.get(this.props.position);\n        super.position(...arguments);\n        if (this.props.physical) {\n            this._setTile(oldPos, 0);\n            this._setTile(this.props.position, 1);\n        }\n        return this;\n    }\n\n    _setTile(tile, value) {\n        const gp = this.layer._gridpath;\n        if (gp) {\n            for (let t, x, y = 0; y < this.props.size.y; y++) {\n                for (x = 0; x < this.props.size.x; x++) {\n                    t = this.layer.getTile(tile.sum(x, y));\n                    value ? gp.setTile(t.x, t.y) : gp.freeTile(t.x, t.y);\n                }\n            }\n        }\n    }\n\n};\n","import Point from '../core/Point';\nimport Sprite from '../display/Sprite';\n\nexport default class Tree extends Sprite {\n\n    constructor(props) {\n        super({\n            physical: true,\n            imagePath: 'img/trees.png',\n            ...props\n        });\n\n        this.UNIT = 40;\n\n        this.addFrame([80, 115], [110, 120], [20, 20]);\n        this.addFrame([210, 75], [86, 160], [10, 12]);\n        this.addFrame([292, 150], [106, 90], [4, 36]);\n        this.addFrame([396, 106], [124, 128], [0, 15]);\n        this.addFrame([66, 250], [114, 155], [0, 15]);\n        this.addFrame([180, 250], [140, 155], [0, 15]);\n        this.addFrame([320, 322], [80, 84], [0, 22]);\n        this.addFrame([402, 266], [130, 146], [0, 40]);\n    }\n\n    renderRandomTree() {\n        const r = parseInt(Math.random() * this._frames.length);\n        this.renderFrame(r);\n        if (this._current === 2) {\n            this.size(Point.get(2, 1));\n        }\n    }\n\n    positionRandom(min, max) {\n        const p = Point.get(\n            parseInt(Math.random() * (max.x - min.x)) + min.x,\n            parseInt(Math.random() * (max.y - min.y)) + min.y,\n            parseInt(Math.random() * (max.z - min.z)) + min.z\n        );\n        this.position(p);\n    }\n\n    // onAdd() {\n    //     super.onAdd();\n    //     this.renderRandomTree();\n    //     const gridSize = 10;\n    //     this.positionRandom(Point.get(-gridSize, -gridSize), Point.get(gridSize, gridSize));\n    // }\n\n};\n","export default class TokenAnimation {\n\n    constructor() {\n        this.NW = { stand: [], walk: [] };\n        this.NN = { stand: [], walk: [] };\n        this.NE = { stand: [], walk: [] };\n        this.EE = { stand: [], walk: [] };\n        this.SE = { stand: [], walk: [] };\n        this.SS = { stand: [], walk: [] };\n        this.SW = { stand: [], walk: [] };\n        this.WW = { stand: [], walk: [] };\n    }\n\n    setDefault({ position, size, offset }) {\n        this._frameDefaults = new TokenAnimationFrame({ position, size, offset });\n    }\n\n    addFrame(dir, action, frame) {\n        this[dir][action].push(new TokenAnimationFrame(frame, this._frameDefaults));\n    }\n\n    setFrames(dir, action, frames) {\n        frames.forEach(frame => this.addFrame(dir, action, frame));\n    }\n\n    setDirection(dir, animation) {\n        for (let action in animation) {\n            this.setFrames(dir, action, animation[action]);\n        }\n    }\n\n};\n\nexport class TokenAnimationFrame {\n\n    constructor(\n        { position, size, offset },\n        { position: _position, size: _size, offset: _offset } = {}\n    ) {\n        this.position = position || _position;\n        this.size = size || _size;\n        this.offset = offset || _offset;\n    }\n\n};\n","import Sprite from './Sprite';\n\nexport default class Clip extends Sprite {\n\n    constructor(props) {\n        super(props);\n        this.props = {\n            fps: 12,\n            renderMiddleFrames: false,\n            ...this.props\n        };\n\n        this.step((timestamp) => {\n            if (timestamp && this._frames.length && this.layer) {\n                const secs = timestamp / 1000;\n                const frame = Math.round(secs * this.props.fps) % this._frames.length;\n\n                if (this.props.renderMiddleFrames || frame != this._current) {\n                    this._current = frame;\n                    this.renderFrame(frame);\n                }\n            }\n        });\n    }\n\n}","import Point from '../core/Point';\nimport TokenAnimation from '../utils/TokenAnimation';\nimport Clip from './Clip';\n\nexport default class Token extends Clip {\n\n    static TILE__NN = Point.get(0, -1);\n    static TILE__EE = Point.get(1, 0);\n    static TILE__SS = Point.get(0, 1);\n    static TILE__WW = Point.get(-1, 0);\n    static TILE__NW = Token.TILE__NN.sum(Token.TILE__WW);\n    static TILE__NE = Token.TILE__NN.sum(Token.TILE__EE);\n    static TILE__SW = Token.TILE__SS.sum(Token.TILE__WW);\n    static TILE__SE = Token.TILE__SS.sum(Token.TILE__EE);\n\n    static ACTION__STAND = 'stand';\n    static ACTION__WALK = 'walk';\n    static DIR__NW = 'NW';\n    static DIR__NN = 'NN';\n    static DIR__NE = 'NE';\n    static DIR__EE = 'EE';\n    static DIR__SE = 'SE';\n    static DIR__SS = 'SS';\n    static DIR__SW = 'SW';\n    static DIR__WW = 'WW';\n    static DIR__DEFAULT = Token.DIR__EE;\n\n    constructor(props) {\n        super(props);\n        this.name = 'token';\n        this.props = {\n            velocity: 0.1,\n            ...this.props\n        }\n\n        this.animation = new TokenAnimation();\n        this._path = [];\n\n        this.ALIVE = false;\n        this.ACTION = Token.ACTION__STAND;\n        this.DIR = Token.DIR__DEFAULT;\n\n        this.walk = this.walk.bind(this);\n        this.stand = this.stand.bind(this);\n    }\n\n    get lastTile() {\n        return this._path.length ? this._path[this._path.length - 1] : this.props.position;\n    }\n\n    get actions() {\n        return Object.keys(this.animation[Token.DIR__DEFAULT]);\n    }\n\n    get directions() {\n        return Object.keys(this.animation).filter(p => p.substr(0, 1) !== '_');\n    }\n\n    onAdd() {\n        this.updateFrames();\n        super.onAdd();\n    }\n\n    renderFrame(frame) {\n        super.renderFrame(frame);\n\n        // movement\n        if (this.ALIVE && this.ACTION === Token.ACTION__WALK) {\n            if (this._path.length) {\n                this.position(this._path.shift());\n            } else {\n                if (this._random) {\n                    this.moveToRandom();\n                } else {\n                    this.stand();\n                }\n            }\n        }\n    }\n\n    _getFrames(dir = this.DIR) {\n\n        if (this.animation[dir]?.[this.ACTION]?.length) {\n            return this.animation[dir][this.ACTION];\n        }\n\n        const def = Array(3).join(dir.substr(0, 1));\n        if (this.animation[def]?.[this.ACTION]?.length) {\n            return this.animation[def][this.ACTION];\n        }\n\n        if (this.animation[Token.DIR__DEFAULT]?.[this.ACTION]?.length) {\n            return this.animation[Token.DIR__DEFAULT][this.ACTION];\n        }\n\n        throw new Error(`NO ANIMATION DIR:${this.DIR} - ACTION:${this.ACTION}`);\n    }\n\n    update() {\n        super.update();\n        if (this._path.length) {\n            const diff = this._path[0].sub(this.props.position).round;\n\n            let X = diff.x >= 0 ? 'E' : 'W';\n            let Y = diff.y >= 0 ? 'S' : 'N';\n            if (diff.y === 0) {\n                Y = X;\n            }\n            if (diff.x === 0) {\n                X = Y;\n            }\n\n            const dir = `${Y}${X}`;\n            if (this.DIR !== dir) {\n                this._frames = this._getFrames(dir);\n            }\n            this.DIR = dir;\n        }\n    }\n\n    updateFrames() {\n        this._frames = this._getFrames();\n    }\n\n    walk() {\n        this.ALIVE = true;\n        if (this.ACTION !== Token.ACTION__WALK || this._frames.length === 0) {\n            this.ACTION = Token.ACTION__WALK;\n            this._frames = this._getFrames();\n        }\n    }\n    stand() {\n        this.ALIVE = true;\n        if (this.ACTION !== Token.ACTION__STAND || this._frames.length === 0) {\n            this.ACTION = Token.ACTION__STAND;\n            this._frames = this._getFrames();\n        }\n    }\n\n    moveToTarget(target) {\n        console.log('moveToTarget', target);\n        if (this.layer._gridpath.isFree(target.x, target.y)) {\n            this._path = this._getPath(target, this.props.position);\n            this.walk();\n        } else {\n            console.log('BUSY!!');\n        }\n    }\n\n    moveToRandom(min = -10, max = 10) {\n        this._random = true;\n        this.moveToTarget(Point.get(\n            parseInt(Math.random() * (max - min)) + min,\n            parseInt(Math.random() * (max - min)) + min\n        ));\n        this.walk();\n    }\n\n    moveNorth() {\n        this._addTarget(Token.TILE__NN);\n        this.walk();\n    }\n    moveEast() {\n        this._addTarget(Token.TILE__EE);\n        this.walk();\n    }\n    moveSouth() {\n        this._addTarget(Token.TILE__SS);\n        this.walk();\n    }\n    moveWest() {\n        this._addTarget(Token.TILE__WW);\n        this.walk();\n    }\n\n    _addTarget(target) {\n        const _target = this.lastTile.sum(target);\n        this._path = this._path.concat(this._getPath(_target, this.lastTile));\n    }\n\n    _getPath(target, start) {\n        const p1 = start;\n        const p2 = target;\n\n        const steps = p1.distance(p2) / this.props.velocity;\n        const step = p2.sub(p1).mult(1 / steps);\n\n        const points = [];\n        for (var s = 1; s < steps; s++) {\n            points.push(p1.sum(step.mult(s)));\n        }\n        points.push(p2);\n\n        return points;\n    }\n\n};\n","import Token from '../display/Token';\n\nexport default class Boy extends Token {\n\n    constructor(props) {\n        super({\n            fps: 6,\n            velocity: .04,\n            imagePath: 'img/boy.png',\n            renderMiddleFrames: true,\n            // wireframe: true,\n            ...props\n        });\n\n        this.UNIT = 30;\n\n        this.animation.setDefault({ size: [55, 110], offset: [0, 12] });\n\n        this.animation.setDirection(Token.DIR__NN, {\n            stand: [{ position: [326, 537] }],\n            walk: [\n                { position: [326, 536] },\n                { position: [262, 536] },\n                { position: [326, 536] },\n                { position: [390, 536] }\n            ]\n        });\n        this.animation.setDirection(Token.DIR__EE, {\n            stand: [{ position: [100, 280] }],\n            walk: [\n                { position: [100, 280] },\n                { position: [36, 280] },\n                { position: [100, 280] },\n                { position: [162, 280] }\n            ]\n        });\n        this.animation.setDirection(Token.DIR__SS, {\n            stand: [{ position: [100, 152] }],\n            walk: [\n                { position: [100, 152] },\n                { position: [36, 152] },\n                { position: [100, 152] },\n                { position: [162, 152] }\n            ]\n        });\n        this.animation.setDirection(Token.DIR__WW, {\n            stand: [{ position: [100, 536] }],\n            walk: [\n                { position: [100, 536] },\n                { position: [36, 536] },\n                { position: [100, 536] },\n                { position: [162, 536] }\n            ]\n        });\n    }\n\n};\n","import UIBase from \"./UIBase\";\nimport Tree from \"../samples/Tree\";\nimport Boy from \"../samples/Boy\";\n\nexport default class UISpriteAdd extends UIBase {\n\n    constructor() {\n        super();\n\n        const sprites = [\n            ['Tree', Tree],\n            ['Boy', Boy]\n        ];\n\n        // SELECT\n        const select_sprite = this.createSelect(sprites.map(o => o[0]));\n        this.element.appendChild(select_sprite);\n\n        // BUTTON\n        const button_add = this.createButton('Add sprite');\n        button_add.addEventListener('click', (e) => {\n            const cls = sprites[select_sprite.value][1];\n            this.onAdd(e, {\n                instance: new cls({})\n            });\n        });\n        this.element.appendChild(button_add);\n    }\n\n    onAdd(event) { }\n\n};\n","import Token from \"../display/Token\";\nimport UIBase from \"./UIBase\";\nimport UIPoint from \"./UIPoint\";\n\nexport default class UISpriteEdit extends UIBase {\n\n    constructor(sprites) {\n        super();\n\n        this.sprites = sprites;\n\n        this.currentSprite = null;\n        this.selectCurrentSprite = this.createSelect([]);\n        this.selectCurrentSprite.addEventListener('change', () => {\n            this.updateCurrentSprite();\n        });\n\n        this.animation = new UITokenEditAnimation();\n        this.animation.onChange = this.updateAnimation.bind(this);\n        this.frames = new UISpriteEditRange('frame');\n        this.frames.onChange = this.updateFrames.bind(this);\n        this.position = new UIPoint('position', 1);\n        this.position.onChange = this.updatePosition.bind(this);\n\n        this.element.appendChild(this.selectCurrentSprite);\n        this.element.appendChild(this.animation.element);\n        this.element.appendChild(this.frames.element);\n        this.element.appendChild(this.position.element);\n    }\n\n    onEdit() { }\n\n    // SPRITE LIST\n    updateSpriteList(options) {\n        this.updateSelect(this.selectCurrentSprite, options);\n        this.currentSprite || (this.currentSprite = this.sprites[0]);\n        this.updateCurrentSprite();\n    }\n\n    // CURRENT SPRITE\n    updateCurrentSprite() {\n        this.currentSprite = this.sprites[this.selectCurrentSprite.value];\n        this.updateKnobs();\n    }\n\n    // KNOBS\n    updateKnobs() {\n        this.updateFramesKnobs();\n        this.updatePositionKnobs();\n        this.updateAnimationKnobs();\n    }\n\n    // ANIMATION\n    updateAnimation() {\n        if (this.currentSprite instanceof Token) {\n            const { actions, directions } = this.currentSprite;\n            this.currentSprite.ACTION = actions[this.animation.value.action];\n            this.currentSprite.DIR = directions[this.animation.value.direction];\n            this.currentSprite.updateFrames();\n            this.updateFramesKnobs();\n            this.updateFrames();\n        }\n    }\n    updateAnimationKnobs() {\n        this.animation.update(this.currentSprite);\n    }\n\n    // FRAMES\n    updateFrames() {\n        this.currentSprite?.renderFrame(this.frames.value);\n        this.onEdit();\n    }\n    updateFramesKnobs() {\n        this.frames.update({\n            value: this.currentSprite._current,\n            max: this.currentSprite._frames.length - 1\n        })\n    }\n\n    //  POSITION\n    updatePosition() {\n        this.currentSprite?.position(this.position.value);\n        this.onEdit();\n    }\n    updatePositionKnobs() {\n        const { x, y, z } = this.currentSprite.props.position;\n        this.position.update(x, y, z);\n    }\n\n};\n\nclass UISpriteEditRange extends UIBase {\n\n    constructor(prop, min = 0, max = 0, step = 1) {\n        super();\n        this.prop = prop;\n\n        const label = document.createElement('span');\n        label.textContent = prop;\n\n        this.output = document.createElement('span');\n\n        this.range = this.createRange(min, max, step);\n        this.range.addEventListener('change', () => {\n            this.output.textContent = this.range.value;\n            this.onChange();\n        });\n\n        this.element.appendChild(label);\n        this.element.appendChild(this.range);\n        this.element.appendChild(this.output);\n    }\n\n    get value() {\n        return Number(this.range.value);\n    }\n\n    update({ min, max, step, value }) {\n        this.updateRange(this.range, { min, max, step, value });\n        this.output.textContent = this.range.value;\n    }\n\n}\n\nclass UITokenEditAnimation extends UIBase {\n\n    constructor() {\n        super();\n        const animLabel = document.createElement('span');\n        animLabel.textContent = 'animation';\n\n        this.action = this.createSelect([]);\n        this.action.addEventListener('change', () => {\n            this.onChange();\n        });\n\n        this.direction = this.createSelect([]);\n        this.direction.addEventListener('change', () => {\n            this.onChange();\n        });\n\n        this.element.appendChild(animLabel);\n        this.element.appendChild(this.action);\n        this.element.appendChild(this.direction);\n\n    }\n\n    get value() {\n        return {\n            action: Number(this.action.value),\n            direction: Number(this.direction.value)\n        };\n    }\n\n    update(sprite) {\n        if (sprite instanceof Token) {\n            const { animation, actions, directions, ACTION, DIR } = sprite;\n            this.updateSelect(this.action, animation ? actions : [], actions.indexOf(ACTION));\n            this.updateSelect(this.direction, animation ? directions : [], directions.indexOf(DIR));\n        } else {\n            this.updateSelect(this.action, []);\n            this.updateSelect(this.direction, []);\n        }\n    }\n\n}\n","import UIBase from \"./UIBase\";\nimport UISpriteAdd from \"./UISpriteAdd\";\nimport UISpriteEdit from \"./UISpriteEdit\";\n\nexport default class UISprite extends UIBase {\n\n    constructor(layer) {\n        super();\n        this.element.style.cssText = 'flex: 1 1 50%';\n\n        this.sprites = [];\n        this.layer = layer;\n\n        const spriteEdit = new UISpriteEdit(this.sprites);\n        spriteEdit.onEdit = () => this.layer.stage.render();\n\n        const spriteAdd = new UISpriteAdd();\n        spriteAdd.onAdd = (e, { instance }) => {\n            instance.name = `${instance.name || 'sprite'}_${this.sprites.length.toString()}`;\n            this.sprites.push(instance);\n            this.layer.add(instance);\n            this.layer.stage.render();\n            spriteEdit.updateSpriteList(this.sprites.map(s => s.name));\n        }\n\n        this.element.appendChild(spriteAdd.element);\n        this.element.appendChild(spriteEdit.element);\n    }\n\n};\n","import UIBase from \"./UIBase\";\n\nexport default class UIStage extends UIBase {\n\n    constructor(stage) {\n        super();\n        this.element.style.cssText = 'flex: 1 1 100%';\n\n        this.stage = stage;\n\n        const label = document.createElement('span');\n        label.textContent = 'live';\n\n        this.player = document.createElement('input');\n        this.player.setAttribute('type', 'checkbox');\n        this.player.addEventListener('change', () => {\n            this.player.checked ?\n                this.stage.start() :\n                this.stage.stop();\n        });\n\n        this.element.appendChild(label);\n        this.element.appendChild(this.player);\n    }\n\n};\n","import UIBase from \"./UIBase\";\nimport UIShape from \"./UIShape\";\nimport UISprite from \"./UISprite\";\nimport UIStage from \"./UIStage\";\n\nexport default class UIContainer extends UIBase {\n\n    constructor(world) {\n        super();\n        this.element.style.cssText = 'position: fixed; width: 100%; display: flex; flex-wrap: wrap; background-color: #dededede; padding: 8px; box-sizing: border-box; transition: bottom ease-in-out 200ms;';\n\n        this.world = world;\n\n        const ui_toggle = new UIToggle();\n        ui_toggle.element.style.cssText = 'position: absolute; top: -30px;';\n        ui_toggle.onChange = checked => this.element.style.bottom = `${checked ? 0 : -this.element.clientHeight}px`;\n        this.element.appendChild(ui_toggle.element);\n\n        const ui_stage = new UIStage(this.world.stage);\n        const ui_shape = new UIShape(this.world);\n        const ui_sprite = new UISprite(this.world);\n        // this.element.appendChild(ui_stage.element);\n        this.element.appendChild(ui_shape.element);\n        this.element.appendChild(ui_sprite.element);\n    }\n\n    init() {\n        this.element.style.bottom = `${-this.element.clientHeight}px`;\n    }\n\n};\n\nclass UIToggle extends UIBase {\n\n    constructor() {\n        super('label');\n\n        const toggle = document.createElement('input');\n        toggle.setAttribute('type', 'checkbox');\n        toggle.addEventListener('change', e => this.onChange(e.target.checked));\n\n        const label = document.createElement('span');\n        label.style.cssText = 'margin: 0 4px; font-size: 14px;';\n        label.textContent = 'toggle UI';\n\n        this.element.appendChild(toggle);\n        this.element.appendChild(label);\n    }\n\n}\n","import Label from './display/Label';\nimport Layer from './display/Layer';\nimport Stage from './display/Stage';\nimport Axis from './display/shape/Axis';\nimport Grid from './display/shape/Grid';\nimport UIContainer from './dom-ui/UIContainer';\n\nconst UNIT = 70;\n\n// GRID\nconst grid = new Layer(Layer.ORIGIN__CENTER, Layer.TYPE__ISO, UNIT);\ngrid.add([\n    new Grid(10),\n    new Axis(20)\n]);\n\n// WORLD\nconst world = new Layer(Layer.ORIGIN__CENTER, Layer.TYPE__ISO, UNIT);\nworld.addGridPath();\n\n// FPS\nconst ui = new Layer(Layer.ORIGIN__TOP_LEFT, Layer.TYPE__2D, 1);\nconst labelFPS = new Label({ color: 0x0, position: [0, 0, 0], text: '', align: 'left', baseline: 'top' });\nui.add([labelFPS]);\n\n// STAGE\nconst stage = new Stage();\nstage.preloadImage('img/boy.png');\nstage.preloadImage('img/trees.png');\nstage.add([grid, world, ui]);\nstage.showFPS(fps => labelFPS.text(`fps: ${fps}`));\nstage.render();\n\n\n// DOM-UI\nconst UI_cont = new UIContainer(world);\ndocument.body.appendChild(UI_cont.element);\nUI_cont.init();\n","import Shape from '../Shape';\nimport Path from '../../core/Path';\nimport Point from '../../core/Point';\n\nexport default class Grid extends Shape {\n\n    constructor(span, color = 0x999999) {\n        super();\n        const min = -span;\n        const max = span;\n        this.name = 'grid';\n\n        for (let x = min; x <= max; x++) {\n            this.add(new Path([\n                Point.get(x, min, 0),\n                Point.get(x, max, 0)\n            ], null, color));\n        }\n        for (let y = min; y <= max; y++) {\n            this.add(new Path([\n                Point.get(min, y, 0),\n                Point.get(max, y, 0)\n            ], null, color));\n        }\n    }\n\n};\n","import Shape from '../Shape';\nimport Point from '../../core/Point';\nimport Path from '../../core/Path';\n\nexport default class Axis extends Shape {\n\n    constructor(size) {\n        super();\n        this.name = 'axis';\n\n        this.add([\n            new Path([\n                Point.get(-size, 0, 0),\n                Point.get(size, 0, 0)\n            ], null, 0x0000ff),\n            new Path([\n                Point.get(0, -size, 0),\n                Point.get(0, size, 0)\n            ], null, 0x00ff00),\n            new Path([\n                Point.get(0, 0, -size),\n                Point.get(0, 0, size)\n            ], null, 0xff0000)\n        ]);\n    }\n\n};\n"],"names":["Color","constructor","red","green","blue","alpha","hsl","rgbToHsl","hue","h","saturation","s","lightness","l","hex","this","toString","length","Array","join","string","array","object","percentage","mult","rgb","r","g","b","lighten","lightColor","_lightColor","get","newColor","Math","min","hslToRgb","a","perc","max","ret","diff","q","p","hue2rgb","parseInt","t","color","num","arguments","fromArray","fromHex","round","Object","fromObject","random","number","substr","res","exec","Point","x","y","z","parseFloat","toOrtho","toIso","depth","average","abs","replace","undefined","sum","_x","_y","_z","sub","distance","sqrt","equals","point","rotateX","angle","center","_rotate","rotateY","rotateZ","axis","_getRotationCoords","x1","y1","radians","PI","x2","cos","sin","y2","xyz","zi","indexOf","ordered","DisplayObject","props","scale","size","position","rotation","_parent","parent","onAdd","update","layer","renderPosition","renderRotation","renderScale","_setProp","_setPoint","translate","rotate","step","callback","_stepCallback","clone","_stepRender","timestamp","prop","value","_point","Error","Label","text","font","align","baseline","Vector","i","j","k","magnitude","normalize","v1","v2","p1","p2","vector","Light","colorDifference","computeColor","points","fromTwoPoints","normal","crossProduct","brightness","dotProduct","GridPath","width","height","origin","grid","_size","_grid","_origin","push","freeTile","setTile","getTile","isFree","DisplayObjectContainer","_children","orderedChildren","sort","c1","c2","add","child","forEach","c","_addChild","remove","_removeChild","index","splice","console","log","idx","Path","stroke","total","concat","reverse","slice","map","path","extrude","paths","top","segments","radius","Shape","wireframe","extruded","extraPaths","extrudePaths","orderedPaths","clearPaths","Bitmap","imagePath","sourceSize","sourcePosition","destinationSize","destinationPosition","_loaded","image","Image","onload","event","updateImageSize","target","onLoad","src","source","destination","img","naturalWidth","naturalHeight","FPSCounter","_times","_showFPS","_callback","start","_step","stop","now","performance","shift","requestAnimationFrame","bind","Stage","canvas","document","createElement","style","cssText","context","getContext","body","appendChild","window","innerWidth","innerHeight","imageCache","light","addEventListener","_clickHandler","_resizeHandler","layers","showFPS","fpsCounter","hideFPS","preloadImage","_playing","_startTime","render","mouse","clientX","clientY","relative","getOrigin","screenToLayer","tile","emit","clearRect","_renderChildren","children","_renderChild","_drawPath","_drawBitmap","_drawLabel","offset","zero","layerToScreen","beginPath","moveTo","lineTo","closePath","_color","save","strokeStyle","fillStyle","lineWidth","globalAlpha","fill","restore","bitmap","_position","sw","sh","sx","sy","dw","dh","dx","dy","drawImage","strokeRect","label","transform","textBaseline","fillText","Layer","L","T","R","C","B","ORIGIN__CENTER","type","TYPE__2D","unit","ORIGIN","TYPE","UNIT","_listeners","_nodes","stage","addGridPath","_gridpath","ceil","floor","TYPE__ISO","subscribe","data","listener","UIBase","tag","element","onChange","createSelect","options","select","opt","updateSelect","selectedIndex","firstChild","removeChild","lastChild","isSelected","selected","createButton","button","textContent","createTextField","textfield","setAttribute","createRange","range","updateRange","createStepper","Rect","name","Cube","Circle","Cylinder","Diamond","vertexTop","vertexBottom","Pyramid","vertex","Ramp","direction","FACE__SS","Stairs","pos","steps","FACE__EE","siz","rect","Lego","circle","w","LegoBrick","UIShapeAdd","shapes","select_shape","o","button_add","e","cls","instance","UIPoint","point_x","point_y","point_z","Number","UIShapeEdit","currentShape","selectCurrentShape","updateCurrentShape","UIColor","updateColor","updateSize","updatePosition","updateRotation","onEdit","updateShapeList","updateKnobs","updateColorKnobs","updateSizeKnobs","updatePositionKnobs","updateRotationKnobs","UIShape","shapeEdit","shapeAdd","Sprite","physical","_frames","_current","preloaded","reposition","renderFrame","addFrames","frames","frame","addFrame","sizeChanged","positionChanged","offsetChanged","oldPos","_setTile","gp","Tree","renderRandomTree","positionRandom","TokenAnimation","NW","stand","walk","NN","NE","EE","SE","SS","SW","WW","setDefault","_frameDefaults","TokenAnimationFrame","dir","action","setFrames","setDirection","animation","_offset","Clip","fps","renderMiddleFrames","secs","Token","TILE__NN","TILE__WW","TILE__EE","TILE__SS","DIR__EE","velocity","_path","ALIVE","ACTION","ACTION__STAND","DIR","DIR__DEFAULT","lastTile","actions","keys","directions","filter","updateFrames","ACTION__WALK","_random","moveToRandom","_getFrames","def","X","Y","moveToTarget","_getPath","moveNorth","_addTarget","moveEast","moveSouth","moveWest","_target","Boy","DIR__NN","DIR__SS","DIR__WW","UISpriteAdd","sprites","select_sprite","UISpriteEdit","currentSprite","selectCurrentSprite","updateCurrentSprite","UITokenEditAnimation","updateAnimation","UISpriteEditRange","updateSpriteList","updateFramesKnobs","updateAnimationKnobs","output","animLabel","sprite","UISprite","spriteEdit","spriteAdd","UIStage","player","checked","UIToggle","toggle","span","world","ui","ORIGIN__TOP_LEFT","labelFPS","UI_cont","ui_toggle","bottom","clientHeight","ui_shape","ui_sprite","init"],"mappings":"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"}